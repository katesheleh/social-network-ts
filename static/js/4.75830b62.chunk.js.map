{"version":3,"sources":["hoc/withAuthRedirect.tsx","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogsForm/DialogsForm.module.css","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/DialogsForm/DialogsForm.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"names":["MapStateToPropsWithRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","DialogItem","className","styles","dialogItem","id","name","Message","key","message","maxLength","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","type","button","Dialogs","dialogsElements","dialogs","map","dialog","messagesElements","messages","content","colLeft","colRight","formData","sendMessage","newMessageBody","compose","messagesPage","addMessageAC"],"mappings":"oOAUMA,EAA8B,SAACC,GAAD,MAA4C,CAC/EC,OAAQD,EAAME,KAAKD,SAIPE,EAAmB,SAAmBC,GAAuC,IACnFC,EADkF,uKAGtF,OAAQC,KAAKC,MAAMN,OAEf,kBAACG,EAAcE,KAAKC,OADpB,kBAAC,IAAD,CAAUC,GAAI,eAJoE,GACxDC,IAAML,WAQtC,OAAOM,YAAiDX,EAAjDW,CAA8EL,K,oBCvBtFM,EAAOC,QAAU,CAAC,QAAU,2B,gECA5BD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,OAAS,4BAA4B,OAAS,8B,iHCiBlFC,EARI,SAACN,GACnB,OACE,yBAAKO,UAAWC,IAAOC,YACtB,kBAAC,IAAD,CAASR,GAAE,mBAAcD,EAAMU,KAAOV,EAAMW,Q,kBCCjCC,EAND,SAACZ,GACb,OACE,yBAAKa,IAAKb,EAAMU,GAAIH,UAAWC,IAAOM,SAAUd,EAAMc,U,oDCCpDC,EAAYC,YAAiB,IAmBpBC,cAA+B,CAE7CC,KAAM,eAFQD,EAjBuD,SAACjB,GAEtE,OACE,0BAAMO,UAAWC,IAAOU,KAAMC,SAAUnB,EAAMoB,cAC7C,kBAACC,EAAA,EAAD,CACEC,UAAWC,IACXC,SAAU,CAACC,IAAUV,GACrBJ,KAAM,iBACNe,YAAY,4BACd,4BACEC,KAAM,SACNpB,UAAWC,IAAOoB,QAFpB,mBC0BWC,EA/BC,SAAC7B,GAEhB,IAAI8B,EAAkB9B,EAAM+B,QACzBC,KAAI,SAAAC,GAAM,OAAI,kBAAC,EAAD,CAAYpB,IAAKoB,EAAOvB,GAAIA,GAAIuB,EAAOvB,GAAIC,KAAMsB,EAAOtB,UAErEuB,EAAmBlC,EAAMmC,SAC1BH,KAAI,SAAAlB,GAAO,OAAI,kBAAC,EAAD,CAASD,IAAKC,EAAQJ,GAAII,QAASA,EAAQA,QAASJ,GAAII,EAAQJ,QAMlF,OACE,yBAAKH,UAAWC,IAAOuB,SACtB,uCACA,yBAAKxB,UAAWC,IAAO4B,SAEtB,yBAAK7B,UAAWC,IAAO6B,SACrBP,GAGF,yBAAKvB,UAAWC,IAAO8B,UACrBJ,EAED,kBAAC,EAAD,CAAaf,SAhBD,SAACoB,GACjBvC,EAAMwC,YAAYD,EAASE,uB,wBCVdC,4BACbvC,aARoB,SAACV,GACtB,MAAO,CACNsC,QAAStC,EAAMkD,aAAaZ,QAC5BI,SAAU1C,EAAMkD,aAAaR,YAO3B,CACCK,YAAaI,MAEhBhD,IANa8C,CAObb","file":"static/js/4.75830b62.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {AppRootStateType} from '../redux/redux-store';\r\nimport {connect} from 'react-redux';\r\n\r\ntype MapStateType = {\r\n\tisAuth: boolean\r\n}\r\n\r\n\r\nconst MapStateToPropsWithRedirect = (state: AppRootStateType): MapStateType => ({\r\n\tisAuth: state.auth.isAuth\r\n})\r\n\r\n\r\nexport const withAuthRedirect = <P extends object>(Component: React.ComponentType<P>) => {\r\n\tclass RedirectComponent extends React.Component<MapStateType> {\r\n\t\trender() {\r\n\t\t\treturn !this.props.isAuth\r\n\t\t\t\t\t? <Redirect to={'/login'}/>\r\n\t\t\t\t\t: <Component {...this.props as P} />\r\n\t\t}\r\n\t}\r\n\r\n\treturn connect<MapStateType, null, P, AppRootStateType>(MapStateToPropsWithRedirect)(RedirectComponent)\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Dialogs_content__3rNsg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"DialogsForm_form__1X2Zp\",\"button\":\"DialogsForm_button__2DoQS\",\"active\":\"DialogsForm_active__3GWhx\"};","import React from 'react';\r\nimport styles from './DialogItem.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\n\r\nexport type DialogItemType = {\r\n\tid: string\r\n\tname: string\r\n}\r\n\r\nconst DialogItem = (props: DialogItemType) => {\r\n\treturn (\r\n\t\t\t<div className={styles.dialogItem}>\r\n\t\t\t\t<NavLink to={`/dialogs/${props.id}`}>{props.name}</NavLink>\r\n\t\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport styles from './Message.module.css';\r\n\r\nexport type MessageType = {\r\n  id: string\r\n  message: string\r\n}\r\n\r\nconst Message=(props: MessageType) => {\r\n  return (\r\n    <div key={props.id} className={styles.message}>{props.message}</div>\r\n  )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport styles from './DialogsForm.module.css';\r\nimport {Field, InjectedFormProps, reduxForm} from 'redux-form';\r\nimport {Textarea} from '../../common/FormControls/FormControls';\r\nimport {maxLengthCreator, required} from '../../../utils/validators/validators';\r\n\r\nexport type DialogsFormDataType = {\r\n\tnewMessageBody: string\r\n}\r\n\r\n// validate field max length\r\nconst maxLength = maxLengthCreator(50)\r\n\r\nconst DialogsForm: React.FC<InjectedFormProps<DialogsFormDataType>> = (props) => {\r\n\r\n\treturn (\r\n\t\t\t<form className={styles.form} onSubmit={props.handleSubmit}>\r\n\t\t\t\t<Field\r\n\t\t\t\t\t\tcomponent={Textarea}\r\n\t\t\t\t\t\tvalidate={[required, maxLength]}\r\n\t\t\t\t\t\tname={'newMessageBody'}\r\n\t\t\t\t\t\tplaceholder='Write your message here'/>\r\n\t\t\t\t<button\r\n\t\t\t\t\t\ttype={'submit'}\r\n\t\t\t\t\t\tclassName={styles.button}>Add message\r\n\t\t\t\t</button>\r\n\t\t\t</form>\r\n\t)\r\n}\r\n\r\nexport default reduxForm<DialogsFormDataType>({\r\n\t// a unique name for the form\r\n\tform: 'messageForm'\r\n})(DialogsForm)","import React from 'react';\r\nimport styles from './Dialogs.module.css';\r\nimport DialogItem, {DialogItemType} from './DialogItem/DialogItem';\r\nimport Message, {MessageType} from './Message/Message';\r\nimport DialogsForm, {DialogsFormDataType} from './DialogsForm/DialogsForm';\r\n\r\nexport type DialogsType = {\r\n\tdialogs: Array<DialogItemType>\r\n\tupdateNewMessage: (text: string) => void\r\n\tsendMessage: (newMessageBody: string) => void\r\n}\r\n\r\nexport type MessagesType = {\r\n\tmessages: Array<MessageType>\r\n\tnewMessageText: string\r\n}\r\n\r\nconst Dialogs = (props: DialogsType & MessagesType) => {\r\n\r\n\tlet dialogsElements = props.dialogs\r\n\t\t\t.map(dialog => <DialogItem key={dialog.id} id={dialog.id} name={dialog.name}/>)\r\n\r\n\tlet messagesElements = props.messages\r\n\t\t\t.map(message => <Message key={message.id} message={message.message} id={message.id}/>)\r\n\r\n\tconst onSubmit = (formData: DialogsFormDataType) => {\r\n\t\tprops.sendMessage(formData.newMessageBody)\r\n\t}\r\n\r\n\treturn (\r\n\t\t\t<div className={styles.dialogs}>\r\n\t\t\t\t<h1>Dialogs</h1>\r\n\t\t\t\t<div className={styles.content}>\r\n\r\n\t\t\t\t\t<div className={styles.colLeft}>\r\n\t\t\t\t\t\t{dialogsElements}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className={styles.colRight}>\r\n\t\t\t\t\t\t{messagesElements}\r\n\r\n\t\t\t\t\t\t<DialogsForm onSubmit={onSubmit}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Dialogs;","import {addMessageAC} from '../../redux/dialogsReducer';\r\nimport Dialogs from './Dialogs';\r\nimport {connect} from 'react-redux';\r\nimport {AppRootStateType} from '../../redux/redux-store';\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\r\nimport {compose} from 'redux';\r\nimport {DialogItemType} from './DialogItem/DialogItem';\r\nimport {MessageType} from './Message/Message';\r\n\r\nlet mapStateToProps = (state: AppRootStateType) => {\r\n\treturn {\r\n\t\tdialogs: state.messagesPage.dialogs,\r\n\t\tmessages: state.messagesPage.messages\r\n\t}\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n\t\tconnect<MapStateType, MapDispatchToPropsType, null, AppRootStateType>(\r\n\t\t\t\tmapStateToProps,\r\n\t\t\t\t{\r\n\t\t\t\t\tsendMessage: addMessageAC\r\n\t\t\t\t}),\r\n\t\twithAuthRedirect\r\n)(Dialogs)\r\n\r\n\r\n// TYPES\r\ntype MapStateType = {\r\n\tdialogs: Array<DialogItemType>\r\n\tmessages: Array<MessageType>\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n\tsendMessage: (newMessageBody: string) => void\r\n}"],"sourceRoot":""}