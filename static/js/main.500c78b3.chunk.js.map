{"version":3,"sources":["components/Sidebar/Nav/Nav.module.css","redux/dialogsReducer.tsx","redux/usersReducer.tsx","components/Sidebar/Sidebar.module.css","assets/images/profile.jpg","assets/images/dialogs.jpg","assets/images/news.jpg","assets/images/music.jpg","assets/images/friends.jpg","components/Sidebar/Banner/Banner.module.css","components/Footer/SocialLinks/SocialLinks.module.css","assets/images/loader.svg","api/api.ts","components/common/FormControls/FormControls.module.css","components/Login/LoginForm/LoginForm.module.css","serviceWorker.ts","components/Sidebar/Banner/Banner.tsx","components/Sidebar/Nav/Nav.tsx","components/Header/Header.tsx","redux/authReducer.tsx","components/Header/HeaderContainer.tsx","components/Sidebar/Sidebar.tsx","components/Footer/SocialLinks/SocialLink/SocialLink.tsx","components/Footer/SocialLinks/SocialLinks.tsx","components/Footer/Footer.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Friends/Friends.tsx","components/Login/LoginForm/LoginForm.tsx","components/Login/Login.tsx","redux/appReducer.tsx","components/App/App.tsx","redux/redux-store.tsx","index.tsx","types/types.tsx","components/App/App.module.css","components/Header/Header.module.css","components/common/Preloader/Preloader.tsx","utils/validators/validators.ts","components/common/FormControls/FormControls.tsx","components/Footer/Footer.module.css","components/Footer/SocialLinks/SocialLink/SocialLink.module.css","components/Login/Login.module.css","components/common/Preloader/Preloader.module.css","redux/profileReducer.tsx"],"names":["module","exports","initialState","dialogs","id","v1","name","messages","message","addMessageAC","newMessageBody","type","dialogsReducer","state","action","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","setCurrentPageAC","toggleIsFetchingAC","toggleFollowingInProgressAC","userId","requestUsersTC","page","dispatch","usersAPI","getUsers","then","data","items","totalCount","followUsersTC","followAPI","followUser","response","resultCode","followSuccessAC","unfollowUsersTC","unfollowUser","unFollowSuccessAC","usersReducer","map","u","followed","filter","instance","axios","create","baseURL","withCredentials","headers","authAPI","me","get","login","email","password","rememberMe","post","logout","delete","profileAPI","getUser","getStatus","updateStatus","status","put","savePhoto","file","formData","FormData","append","Boolean","window","location","hostname","match","Banner","props","className","styles","banner","src","image","alt","title","Nav","nav","to","link","activeClassName","activeLink","Header","header","loginBlock","isAuth","onClick","loginLink","setAuthUserDataAC","getAuthUserDataTC","res","ResultCodeStatus","success","logoutTC","authReducer","HeaderContainer","this","React","Component","connect","auth","Sidebar","sidebar","path","render","profileImg","dialogsImg","newsImg","musicImg","friendsImg","SocialLink","socialLink","href","target","rel","SocialLinks","socialLinks","Footer","footer","copyright","News","news","Music","music","Friends","friends","maxLength","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","error","errorMsg","formRow","htmlFor","Field","component","Input","validate","required","placeholder","InputPsw","inputCheckbox","button","MapDispatchToProps","length","stopSubmit","_error","section","initState","initialized","appReducer","DialogsContainer","lazy","ProfileContainer","UsersContainer","App","initializeApp","app","main","content","contentMain","fallback","Preloader","compose","withRouter","promise","Promise","all","reducers","combineReducers","profilePage","profileReducer","messagesPage","usersPage","formReducer","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","wrapper","preloader","img","value","Textarea","hasError","meta","touched","formControl","input","textarea","inputText","posts","likesCounter","profile","lookingForAJob","lookingForAJobDescription","fullName","aboutMe","contacts","github","vk","facebook","instagram","twitter","website","youtube","mainLink","photos","small","large","addPostAC","newPostBody","setStatus","setUserProfileTC","getUserStatusTC","log","updateStatusTC","savePhotoTC","newPost"],"mappings":"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","file":"static/js/main.500c78b3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__iSu1L\",\"link\":\"Nav_link__1EeNV\",\"activeLink\":\"Nav_activeLink__sJO7m\"};","import {v1} from 'uuid';\r\nimport {MessageType} from '../components/Dialogs/Message/Message';\r\nimport {DialogItemType} from '../components/Dialogs/DialogItem/DialogItem';\r\n\r\nexport const ADD_MESSAGE = 'ADD_MESSAGE'\r\nexport const UPDATE_NEW_MESSAGE_TEXT = 'UPDATE_NEW_MESSAGE_TEXT'\r\n\r\nexport type AddMessageACType = {\r\n\ttype: typeof ADD_MESSAGE\r\n\tnewMessageBody: string\r\n}\r\n\r\n\r\nexport type DialogsReducersActionType = AddMessageACType;\r\n\r\nexport type MessagesPageType = {\r\n\tdialogs: Array<DialogItemType>\r\n\tmessages: Array<MessageType>\r\n}\r\n\r\nconst initialState = {\r\n\tdialogs: [\r\n\t\t{id: v1(), name: 'Jain'},\r\n\t\t{id: v1(), name: 'Nick'},\r\n\t\t{id: v1(), name: 'Alex'},\r\n\t],\r\n\tmessages: [\r\n\t\t{id: v1(), message: 'Hi! How are you?'},\r\n\t\t{id: v1(), message: 'I am fine! And you?'},\r\n\t\t{id: v1(), message: 'Me too. Have a nice day!'},\r\n\t\t{id: v1(), message: ':)'},\r\n\t]\r\n}\r\n\r\nconst dialogsReducer = (state: MessagesPageType = initialState, action: DialogsReducersActionType) => {\r\n\tswitch (action.type) {\r\n\r\n\t\tcase ADD_MESSAGE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmessages: [...state.messages, {id: v1(), message: action.newMessageBody}]\r\n\t\t\t}\r\n\r\n\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\nexport const addMessageAC = (newMessageBody: string): AddMessageACType => {\r\n\treturn (\r\n\t\t\t{type: ADD_MESSAGE, newMessageBody}\r\n\t)\r\n}\r\n\r\nexport default dialogsReducer;","import {followAPI, usersAPI} from '../api/api';\r\nimport {Dispatch} from 'redux';\r\n\r\nconst FOLLOW = 'FOLLOW'\r\nconst UNFOLLOW = 'UNFOLLOW'\r\nconst SET_USERS = 'SET_USERS'\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\r\nconst SET_TOTAL_COUNT = 'SET_TOTAL_COUNT'\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\r\nconst TOGGLE_FOLLOWING_PROGRESS = 'TOGGLE_FOLLOWING_PROGRESS'\r\n\r\nexport type UsersPageType = {\r\n\tusers: Array<UsersStructureType>\r\n\tpageSize: number\r\n\ttotalUsersCount: number\r\n\tcurrentPage: number\r\n\tisFetching: boolean\r\n\tfollowingInProgress: Array<number>\r\n}\r\n\r\nexport type UsersStructureType = {\r\n\tname: string\r\n\tid: string\r\n\tphotos: {\r\n\t\tsmall?: string\r\n\t\tlarge?: string\r\n\t}\r\n\tfollowed: boolean\r\n\tstatus: string\r\n}\r\n\r\nexport type UsersFollowActionType = {\r\n\ttype: typeof FOLLOW\r\n\tuserId: string\r\n}\r\n\r\nexport type UsersUnFollowActionType = {\r\n\ttype: typeof UNFOLLOW\r\n\tuserId: string\r\n}\r\n\r\nexport type UsersSetUsersActionType = {\r\n\ttype: typeof SET_USERS\r\n\tusers: Array<UsersStructureType>\r\n}\r\n\r\nexport type UsersCurrentPageActionType = {\r\n\ttype: typeof SET_CURRENT_PAGE\r\n\tcurrentPage: number\r\n}\r\n\r\nexport type UsersTotalCountActionType = {\r\n\ttype: typeof SET_TOTAL_COUNT\r\n\ttotalCount: number\r\n}\r\n\r\nexport type ToggleIsFetchingActionType = {\r\n\ttype: typeof TOGGLE_IS_FETCHING\r\n\tisFetching: boolean\r\n}\r\n\r\nexport type ToggleFollowingInProgressActionType = {\r\n\ttype: typeof TOGGLE_FOLLOWING_PROGRESS\r\n\tisFetching: boolean\r\n\tuserId: number\r\n}\r\n\r\nexport type UsersReducersActionType = UsersFollowActionType | UsersUnFollowActionType |\r\n\t\tUsersSetUsersActionType | UsersCurrentPageActionType | UsersTotalCountActionType |\r\n\t\tToggleIsFetchingActionType | ToggleFollowingInProgressActionType\r\n\r\nconst initialState = {\r\n\tusers: [],\r\n\tpageSize: 10,\r\n\ttotalUsersCount: 0,\r\n\tcurrentPage: 1,\r\n\tisFetching: false,\r\n\tfollowingInProgress: []\r\n}\r\n\r\nconst usersReducer = (state: UsersPageType = initialState, action: UsersReducersActionType) => {\r\n\r\n\tswitch (action.type) {\r\n\t\tcase FOLLOW:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tusers: state.users.map((u: UsersStructureType) => {\r\n\t\t\t\t\tif (u.id === action.userId) {\r\n\t\t\t\t\t\treturn {...u, followed: true}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn u\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\tcase UNFOLLOW:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tusers: state.users.map((u: UsersStructureType) => {\r\n\t\t\t\t\tif (u.id === action.userId) {\r\n\t\t\t\t\t\treturn {...u, followed: false}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn u\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\tcase SET_USERS:\r\n\t\t\treturn {...state, users: action.users}\r\n\r\n\t\tcase SET_CURRENT_PAGE:\r\n\t\t\treturn {...state, currentPage: action.currentPage}\r\n\r\n\t\tcase SET_TOTAL_COUNT:\r\n\t\t\treturn {...state, totalUsersCount: action.totalCount}\r\n\r\n\t\tcase TOGGLE_IS_FETCHING:\r\n\t\t\treturn {...state, isFetching: action.isFetching}\r\n\r\n\t\tcase TOGGLE_FOLLOWING_PROGRESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfollowingInProgress: action.isFetching\r\n\t\t\t\t\t\t? [...state.followingInProgress, action.userId]\r\n\t\t\t\t\t\t: state.followingInProgress.filter(id => id !== action.userId)\r\n\t\t\t}\r\n\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\nexport const followSuccessAC = (userId: string): UsersFollowActionType => ({type: FOLLOW, userId})\r\n\r\n\r\nexport const unFollowSuccessAC = (userId: string): UsersUnFollowActionType => ({type: UNFOLLOW, userId})\r\n\r\n\r\nexport const setUsersAC = (users: Array<UsersStructureType>): UsersSetUsersActionType => ({type: SET_USERS, users})\r\n\r\n\r\nexport const setCurrentPageAC = (currentPage: number): UsersCurrentPageActionType => ({\r\n\ttype: SET_CURRENT_PAGE, currentPage\r\n})\r\n\r\n\r\nexport const setTotalCountAC = (totalCount: number): UsersTotalCountActionType => ({type: SET_TOTAL_COUNT, totalCount})\r\n\r\n\r\nexport const toggleIsFetchingAC = (isFetching: boolean): ToggleIsFetchingActionType => ({\r\n\ttype: TOGGLE_IS_FETCHING, isFetching\r\n})\r\n\r\n\r\nexport const toggleFollowingInProgressAC = (isFetching: boolean, userId: number): ToggleFollowingInProgressActionType => ({\r\n\ttype: TOGGLE_FOLLOWING_PROGRESS, isFetching, userId\r\n})\r\n\r\n//thunk\r\nexport const requestUsersTC = (page: number, pageSize: number) => {\r\n\treturn (\r\n\t\t\t(dispatch: Dispatch<ToggleIsFetchingActionType | UsersSetUsersActionType | UsersTotalCountActionType | UsersCurrentPageActionType>) => {\r\n\t\t\t\t// show preloader\r\n\t\t\t\tdispatch(toggleIsFetchingAC(true))\r\n\t\t\t\tdispatch(setCurrentPageAC(page))\r\n\r\n\t\t\t\tusersAPI.getUsers(page, pageSize).then(data => {\r\n\t\t\t\t\t// hide preloader\r\n\t\t\t\t\tdispatch(toggleIsFetchingAC(false))\r\n\t\t\t\t\tdispatch(setUsersAC(data.items))\r\n\t\t\t\t\tdispatch(setTotalCountAC(data.totalCount))\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t)\r\n}\r\n\r\n\r\nexport const followUsersTC = (userId: string) => {\r\n\treturn (\r\n\t\t\t(dispatch: Dispatch<ToggleFollowingInProgressActionType | UsersFollowActionType>) => {\r\n\t\t\t\t// disable btn during server response\r\n\t\t\t\tdispatch(toggleFollowingInProgressAC(true, +userId))\r\n\t\t\t\tfollowAPI.followUser(userId).then(response => {\r\n\t\t\t\t\tif (response.data.resultCode === 0) {\r\n\t\t\t\t\t\tdispatch(followSuccessAC(userId))\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// activate btn after server response\r\n\t\t\t\t\tdispatch(toggleFollowingInProgressAC(false, +userId))\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t)\r\n}\r\n\r\n\r\nexport const unfollowUsersTC = (userId: string) => {\r\n\treturn (\r\n\t\t\t(dispatch: Dispatch<ToggleFollowingInProgressActionType | UsersUnFollowActionType>) => {\r\n\t\t\t\t// disable btn during server response\r\n\t\t\t\tdispatch(toggleFollowingInProgressAC(true, +userId))\r\n\t\t\t\tfollowAPI.unfollowUser(userId).then(response => {\r\n\t\t\t\t\tif (response.data.resultCode === 0) {\r\n\t\t\t\t\t\tdispatch(unFollowSuccessAC(userId))\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// activate btn after server response\r\n\t\t\t\t\tdispatch(toggleFollowingInProgressAC(false, +userId))\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t)\r\n}\r\n\r\n\r\nexport default usersReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__szsVy\"};","module.exports = __webpack_public_path__ + \"static/media/profile.6be79ee3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dialogs.6fe6dff8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/news.de3167ce.jpg\";","module.exports = __webpack_public_path__ + \"static/media/music.3e4441df.jpg\";","module.exports = __webpack_public_path__ + \"static/media/friends.50d16565.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"banner\":\"Banner_banner__1k-f_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"socialLinks\":\"SocialLinks_socialLinks__3351c\"};","module.exports = __webpack_public_path__ + \"static/media/loader.5613c226.svg\";","import axios from 'axios';\r\n\r\n\r\n// axios general settings, axios params -> baseUrl and config\r\n// instance makes auto concat for baseUrl and anothers axios config\r\nconst instance = axios.create({\r\n\tbaseURL: 'https://social-network.samuraijs.com/api/1.0',\r\n\twithCredentials: true,\r\n\theaders: {\r\n\t\t'API-KEY': 'a996de67-bf16-42aa-ac25-992dabb5f211'\r\n\t}\r\n})\r\n\r\nexport const authAPI = {\r\n\r\n\tme() {\r\n\t\treturn instance.get(`/auth/me`)\r\n\t\t\t\t.then(response => response.data)\r\n\t},\r\n\tlogin(email: string, password: string, rememberMe: boolean = false) {\r\n\t\treturn instance.post(`/auth/login`, {email, password, rememberMe})\r\n\t\t\t\t.then(response => response.data)\r\n\t},\r\n\tlogout() {\r\n\t\treturn instance.delete(`/auth/login`)\r\n\t\t\t\t.then(response => response.data)\r\n\t}\r\n}\r\n\r\n\r\nexport const usersAPI = {\r\n\r\n\tgetUsers(currentPage: number = 1, pageSize: number = 10) {\r\n\t\treturn instance.get(`/users?page=${currentPage}&count=${pageSize}&sortOrder=asc`)\r\n\t\t\t\t.then(response => response.data)\r\n\t}\r\n\r\n}\r\n\r\n\r\nexport const profileAPI = {\r\n\r\n\tgetUser(userId: string) {\r\n\t\treturn instance.get(`/profile/${userId}`)\r\n\t},\r\n\r\n\tgetStatus(userId: string) {\r\n\t\treturn instance.get(`/profile/status/${userId}`)\r\n\t},\r\n\r\n\tupdateStatus(status: string) {\r\n\t\treturn instance.put(`/profile/status`, {status})\r\n\t},\r\n\r\n\tsavePhoto(file: string) {\r\n\t\tlet formData = new FormData()\r\n\t\tformData.append('image', file)\r\n\t\treturn instance.put(`/profile/photo`, formData, {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'multipart/form-data'\r\n\t\t\t}\r\n\t\t})\r\n\t\t\t\t.then(response => response.data)\r\n\t}\r\n\r\n}\r\n\r\n\r\nexport const followAPI = {\r\n\r\n\tunfollowUser(userId: string) {\r\n\t\treturn instance.delete(`/follow/${userId}`)\r\n\t},\r\n\r\n\tfollowUser(userId: string) {\r\n\t\treturn instance.post(`/follow/${userId}`)\r\n\t}\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"FormControls_textarea__2khi6\",\"inputText\":\"FormControls_inputText__2i6OY\",\"formControl\":\"FormControls_formControl__228TG\",\"error\":\"FormControls_error__10mmX\",\"errorMsg\":\"FormControls_errorMsg__2Nkxe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formRow\":\"LoginForm_formRow__37ixz\",\"button\":\"LoginForm_button__2GMZF\",\"errorMsg\":\"LoginForm_errorMsg__1e8_g\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport styles from './Banner.module.css';\r\n\r\ntype BannerType = {\r\n  title?: string\r\n  image: string\r\n}\r\n\r\nconst Banner = (props: BannerType) => {\r\n  return (\r\n    <div className={styles.banner}>\r\n      <img src={props.image} alt={props.title}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Banner;","import React from 'react';\r\nimport styles from './Nav.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst Nav = () => {\r\n\treturn (\r\n\t\t\t<nav className={styles.nav}>\r\n\t\t\t\t<NavLink to=\"/profile\" className={styles.link} activeClassName={styles.activeLink}>Profile</NavLink>\r\n\t\t\t\t<NavLink to=\"/dialogs\" className={styles.link} activeClassName={styles.activeLink}>Dialogs</NavLink>\r\n\t\t\t\t<NavLink to=\"/users\" className={styles.link} activeClassName={styles.activeLink}>Users</NavLink>\r\n\t\t\t\t<NavLink to=\"/news\" className={styles.link} activeClassName={styles.activeLink}>News</NavLink>\r\n\t\t\t\t<NavLink to=\"/music\" className={styles.link} activeClassName={styles.activeLink}>Music</NavLink>\r\n\t\t\t\t<NavLink to=\"/friends\" className={styles.link} activeClassName={styles.activeLink}>Friends</NavLink>\r\n\t\t\t</nav>\r\n\t)\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\nimport styles from './Header.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nexport type HeaderPropsType = {\r\n\tisAuth: boolean\r\n\tlogin: any\r\n\tlogout: any\r\n}\r\n\r\nconst Header = (props: HeaderPropsType) => {\r\n\r\n\treturn (\r\n\t\t\t<header className={styles.header}>\r\n\t\t\t\t<h3 className={styles.title}>Social Network <span>by Katia Sheleh</span></h3>\r\n\r\n\t\t\t\t<div className={styles.loginBlock}>\r\n\r\n\t\t\t\t\t{props.isAuth\r\n\t\t\t\t\t\t\t? <div>Hello, {props.login}! <br/><span onClick={props.logout} className={styles.logout}>Logout</span></div>\r\n\t\t\t\t\t\t\t: <NavLink className={styles.loginLink} to={'/login'}>Login</NavLink>}\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</header>\r\n\t)\r\n}\r\n\r\nexport default Header;","import {Dispatch} from 'redux';\r\nimport {authAPI} from '../api/api';\r\nimport {ResultCodeStatus} from '../types/types';\r\nimport {ThunkDispatch} from 'redux-thunk';\r\nimport {AppRootStateType} from './redux-store';\r\nimport {stopSubmit} from 'redux-form';\r\n\r\nexport const SET_USER_DATA = 'SET_USER_DATA';\r\n\r\nexport type AuthUserType = {\r\n\tuserId: null | string\r\n\temail: null | string\r\n\tlogin: null | string\r\n\tisAuth: boolean\r\n}\r\n\r\n\r\nexport type SetUserDataType = {\r\n\ttype: typeof SET_USER_DATA\r\n\tdata: AuthUserType\r\n}\r\n\r\nexport type StopSubmitType = any\r\n\r\nexport type AuthReducersActionType = SetUserDataType\r\n\r\n\r\nlet initialState: AuthUserType = {\r\n\tuserId: null,\r\n\temail: null,\r\n\tlogin: null,\r\n\tisAuth: false\r\n}\r\n\r\n\r\nconst authReducer = (state: AuthUserType = initialState, action: AuthReducersActionType) => {\r\n\r\n\tswitch (action.type) {\r\n\t\tcase SET_USER_DATA:\r\n\t\t\treturn {...state, ...action.data}\r\n\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\n\r\nexport const setAuthUserDataAC = (userId: null | string, email: null | string, login: null | string, isAuth: boolean): SetUserDataType =>\r\n\t\t({type: SET_USER_DATA, data: {userId, email, login, isAuth}})\r\n\r\n// thunk\r\nexport const getAuthUserDataTC = () => (dispatch: Dispatch<SetUserDataType>) => {\r\n\treturn authAPI.me().then(res => {\r\n\t\tif (res.resultCode === ResultCodeStatus.success) {\r\n\t\t\tlet {id, login, email} = res.data\r\n\t\t\tdispatch(setAuthUserDataAC(id, email, login, true))\r\n\t\t}\r\n\t})\r\n}\r\n\r\n\r\nexport const loginTC = (email: string, password: string, rememberMe: boolean) =>\r\n\t\t(dispatch: ThunkDispatch<AppRootStateType, unknown, AuthReducersActionType & StopSubmitType>) => {\r\n\r\n\t\t\tauthAPI.login(email, password, rememberMe).then(res => {\r\n\t\t\t\tif (res.resultCode === ResultCodeStatus.success) {\r\n\t\t\t\t\tdispatch(getAuthUserDataTC())\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// get error message from server\r\n\t\t\t\t\tlet message = res.messages.length > 0 ? res.messages[0] : 'Some Error'\r\n\t\t\t\t\t// stop form submit if fields are wrong\r\n\t\t\t\t\tdispatch(stopSubmit('login', {_error: message}))\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\nexport const logoutTC = () => (dispatch: Dispatch<SetUserDataType>) => {\r\n\tauthAPI.logout().then(res => {\r\n\t\tif (res.resultCode === ResultCodeStatus.success) {\r\n\t\t\tdispatch(setAuthUserDataAC(null, null, null, false))\r\n\t\t}\r\n\t})\r\n}\r\n\r\n\r\nexport default authReducer","import React from 'react';\r\nimport Header from './Header';\r\nimport {connect} from 'react-redux';\r\nimport {AppRootStateType} from '../../redux/redux-store';\r\nimport {logoutTC} from '../../redux/authReducer';\r\n\r\n\r\ntype MSTPType = {\r\n\tisAuth: boolean\r\n\tlogin: string | null\r\n}\r\n\r\ntype MDTPType = {\r\n\tlogout: () => void\r\n}\r\n\r\nexport type UserAuthOwnPropsType = MSTPType & MDTPType\r\n\r\n\r\nclass HeaderContainer extends React.Component<UserAuthOwnPropsType> {\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t\t<Header isAuth={this.props.isAuth} login={this.props.login} logout={this.props.logout}/>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n\r\nconst MapStateToProps = (state: AppRootStateType): MSTPType => ({\r\n\tisAuth: state.auth.isAuth,\r\n\tlogin: state.auth.login\r\n})\r\nexport default connect(MapStateToProps, {logout: logoutTC})(HeaderContainer);","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport styles from './Sidebar.module.css';\r\n\r\nimport profileImg from '../../assets/images/profile.jpg';\r\nimport dialogsImg from '../../assets/images/dialogs.jpg';\r\nimport newsImg from '../../assets/images/news.jpg';\r\nimport musicImg from '../../assets/images/music.jpg';\r\nimport friendsImg from '../../assets/images/friends.jpg';\r\n\r\nimport Banner from './Banner/Banner';\r\nimport Nav from './Nav/Nav';\r\nimport HeaderContainer from '../Header/HeaderContainer';\r\n\r\nconst Sidebar = () => {\r\n  return (\r\n    <div className={styles.sidebar}>\r\n      <Route path=\"/profile\" render={() => <Banner image={profileImg} title={'Profile'} />} />\r\n      <Route path=\"/dialogs\" render={() => <Banner image={dialogsImg} title={'Dialogs'} />} />\r\n      <Route path=\"/news\" render={() => <Banner image={newsImg} title={'News'} />} />\r\n      <Route path=\"/music\" render={() => <Banner image={musicImg} title={'Music'} />} />\r\n      <Route path=\"/friends\" render={() => <Banner image={friendsImg} title={'Friends'} />} />\r\n      \r\n      <HeaderContainer />\r\n      <Nav />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Sidebar;","import React from 'react';\r\nimport styles from './SocialLink.module.css';\r\n\r\ntype Props = {\r\n  link: string,\r\n  title: string\r\n}\r\n\r\nconst SocialLink = ({ link, title }: Props) => {\r\n  return (\r\n    <div className={styles.socialLink}>\r\n      <a className={styles.link} href={link} target=\"_blank\" rel=\"noopener noreferrer\">{title}</a>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SocialLink;","import React from 'react';\r\nimport styles from './SocialLinks.module.css';\r\nimport SocialLink from './SocialLink/SocialLink';\r\n\r\nconst SocialLinks = () => {\r\n  return (\r\n    <section className={styles.socialLinks}>\r\n      <SocialLink link={\"https://www.linkedin.com/in/katesheleh/\"} title=\"Linkedin\"/>\r\n      <SocialLink link={\"https://github.com/katesheleh\"} title=\"Github\"/>\r\n      <SocialLink link={\"https://www.instagram.com/katesheleh/\"} title=\"Instagram\"/>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default SocialLinks;","import React from 'react';\r\nimport styles from './Footer.module.css';\r\nimport SocialLinks from './SocialLinks/SocialLinks';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className={styles.footer}>\r\n      <SocialLinks />\r\n      <p className={styles.copyright}>© created by Katia Sheleh</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport styles from './News.module.css';\r\n\r\nconst News = () => {\r\n  return (\r\n    <div className={styles.news}>\r\n      <h1>News</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport styles from './Music.module.css';\r\n\r\nconst Music = () => {\r\n  return (\r\n    <div className={styles.music}>\r\n      <h1>Music</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport styles from './Friends.module.css';\r\n\r\nconst Friends = () => {\r\n  return (\r\n    <div className={styles.friends}>\r\n      <h1>Friends</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Friends;","import React from 'react';\r\nimport styles from './LoginForm.module.css';\r\nimport {Field, InjectedFormProps, reduxForm} from 'redux-form';\r\nimport {Input, InputPsw} from '../../common/FormControls/FormControls';\r\nimport {maxLengthCreator, required} from '../../../utils/validators/validators';\r\n\r\nexport type LoginFormDataType = {\r\n\temail: string\r\n\tpassword: string\r\n\trememberMe: boolean\r\n}\r\n\r\n// validate field max length\r\nconst maxLength = maxLengthCreator(30)\r\n\r\nconst LoginForm: React.FC<InjectedFormProps<LoginFormDataType>> = (props) => {\r\n\treturn (\r\n\t\t\t<form className={styles.form} onSubmit={props.handleSubmit}>\r\n        {/*Show error message if exists*/}\r\n\t\t\t\t{props.error && <p className={styles.errorMsg}>{props.error}</p>}\r\n\t\t\t\t<div className={styles.formRow}>\r\n\t\t\t\t\t<label htmlFor='login_login'>Login</label>\r\n\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\tcomponent={Input}\r\n\t\t\t\t\t\t\tvalidate={[required, maxLength]}\r\n\t\t\t\t\t\t\tname={'email'}\r\n\t\t\t\t\t\t\tplaceholder={'email'}\r\n\t\t\t\t\t\t\tid={'login_email'}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={styles.formRow}>\r\n\t\t\t\t\t<label htmlFor='login_psw'>Password</label>\r\n\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\tcomponent={InputPsw}\r\n\t\t\t\t\t\t\tvalidate={[required, maxLength]}\r\n\t\t\t\t\t\t\tname={'password'}\r\n\t\t\t\t\t\t\tplaceholder={'Password'}\r\n\t\t\t\t\t\t\tid={'login_psw'}/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={styles.formRow}>\r\n\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\tcomponent={'input'}\r\n\t\t\t\t\t\t\tname={'rememberMe'}\r\n\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\tid={'login_rememberMe'}\r\n\t\t\t\t\t\t\tclassName={styles.inputCheckbox}/>\r\n\t\t\t\t\t<label htmlFor='login_rememberMe'>Remember me</label>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={styles.formRow}>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype={'submit'}\r\n\t\t\t\t\t\t\tclassName={styles.button}>Send\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t)\r\n}\r\n\r\n\r\nexport default reduxForm<LoginFormDataType>({\r\n\t// a unique name for the form\r\n\tform: 'login'\r\n})(LoginForm)","import React from 'react';\r\nimport styles from './Login.module.css';\r\nimport LoginForm, {LoginFormDataType} from './LoginForm/LoginForm';\r\nimport {connect} from 'react-redux';\r\nimport {loginTC, logoutTC} from '../../redux/authReducer';\r\nimport { Redirect } from 'react-router-dom';\r\nimport {AppRootStateType} from '../../redux/redux-store';\r\n\r\nexport type MDTPType = {\r\n\tlogin: (email: string, password: string, rememberMe: boolean) => void\r\n\tlogout: () => void\r\n}\r\n\r\nexport type MSTPType = {\r\n\tisAuth: boolean\r\n}\r\n\r\nconst Login = (props: MDTPType & MSTPType) => {\r\n\tconst onSubmit = (formData: LoginFormDataType) => {\r\n\t\tprops.login(formData.email, formData.password, formData.rememberMe)\r\n\t}\r\n\r\n\tif(props.isAuth) {\r\n\t\treturn <Redirect to={'/profile'}/>\r\n\t}\r\n\r\n\treturn (\r\n\t\t\t<div className={styles.login}>\r\n\t\t\t\t<h1>Login</h1>\r\n\t\t\t\t<section className={styles.section}>\r\n\t\t\t\t\t<LoginForm onSubmit={onSubmit}/>\r\n\t\t\t\t</section>\r\n\t\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nlet mapStateToProps = (state: AppRootStateType): MSTPType => {\r\n\treturn {\r\n\t\tisAuth: state.auth.isAuth\r\n\t}\r\n}\r\n\r\nconst MapDispatchToProps: MDTPType = {\r\n\tlogin: loginTC,\r\n\tlogout: logoutTC\r\n}\r\n\r\nexport default connect(mapStateToProps, MapDispatchToProps)(Login)","import {Dispatch} from 'redux';\r\nimport {getAuthUserDataTC} from './authReducer';\r\n\r\nexport const INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\n\r\ntype InitializedSuccessType = {\r\n\tinitialized: boolean\r\n}\r\n\r\nlet initState: InitializedSuccessType = {\r\n\tinitialized: false\r\n}\r\n\r\ntype InitializedActionType = {\r\n\ttype: typeof INITIALIZED_SUCCESS\r\n}\r\n\r\n\r\nconst appReducer = (state: InitializedSuccessType = initState, action: InitializedActionType) => {\r\n\r\n\tswitch (action.type) {\r\n\r\n\t\tcase INITIALIZED_SUCCESS:\r\n\t\t\treturn {...state, initialized: true}\r\n\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\nexport const initializedSuccess = (): InitializedActionType =>\r\n\t\t({type: INITIALIZED_SUCCESS})\r\n\r\n\r\nexport const initializeAppTC = () => (dispatch: Dispatch<any>) => {\r\n\tlet promise = dispatch(getAuthUserDataTC())\r\n\tPromise.all([promise])\r\n\t\t\t.then(() => {\r\n\t\t\t\tdispatch(initializedSuccess())\r\n\t\t\t})\r\n}\r\n\r\nexport default appReducer","import React, {Suspense} from 'react';\r\nimport styles from './App.module.css';\r\nimport {Route, withRouter} from 'react-router-dom';\r\nimport {RouteComponentProps} from 'react-router';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\nimport Footer from '../Footer/Footer';\r\nimport News from '../News/News';\r\nimport Music from '../Music/Music';\r\nimport Friends from '../Friends/Friends';\r\nimport Login from '../Login/Login';\r\nimport {connect} from 'react-redux';\r\nimport {compose} from 'redux';\r\nimport {initializeAppTC} from '../../redux/appReducer';\r\nimport {AppRootStateType} from '../../redux/redux-store';\r\nimport Preloader from '../common/Preloader/Preloader';\r\n\r\nconst DialogsContainer = React.lazy(() => import('../Dialogs/DialogsContainer'));\r\nconst ProfileContainer = React.lazy(() => import('../Profile/ProfileContainer'));\r\nconst UsersContainer = React.lazy(() => import('../Users/UsersContainer'));\r\n\r\n\r\nclass App extends React.Component<OwnPropsType> {\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.props.initializeApp()\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (!this.props.initialized) {\r\n\t\t\treturn <Preloader/>\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t\t<div className={styles.app}>\r\n\t\t\t\t\t<main className={styles.main}>\r\n\t\t\t\t\t\t<div className={styles.sidebar}>\r\n\t\t\t\t\t\t\t<Sidebar/>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className={styles.content}>\r\n\t\t\t\t\t\t\t<div className={styles.contentMain}>\r\n\t\t\t\t\t\t\t\t<Route path='/login' render={() => <Login/>}/>\r\n\t\t\t\t\t\t\t\t<Route path='/profile/:userId?'\r\n\t\t\t\t\t\t\t\t\t\t\t render={() => <Suspense fallback={<Preloader/>}><ProfileContainer/></Suspense>}/>\r\n\t\t\t\t\t\t\t\t<Route path='/dialogs'\r\n\t\t\t\t\t\t\t\t\t\t\t render={() => <Suspense fallback={<Preloader/>}><DialogsContainer/></Suspense>}/>\r\n\t\t\t\t\t\t\t\t<Route path='/users'\r\n\t\t\t\t\t\t\t\t\t\t\t render={() => <Suspense fallback={<Preloader/>}><UsersContainer/></Suspense>}/>\r\n\t\t\t\t\t\t\t\t<Route path='/news' render={() => <News/>}/>\r\n\t\t\t\t\t\t\t\t<Route path='/music' render={() => <Music/>}/>\r\n\t\t\t\t\t\t\t\t<Route path='/friends' render={() => <Friends/>}/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className={styles.footer}>\r\n\t\t\t\t\t\t\t\t<Footer/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</main>\r\n\t\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst MapStateToProps = (state: AppRootStateType): MSTPType => ({\r\n\tinitialized: state.app.initialized\r\n})\r\n\r\n\r\nexport default compose<React.ComponentType>(\r\n\t\twithRouter,\r\n\t\tconnect<MSTPType, MDTPType, null, AppRootStateType>(MapStateToProps, {initializeApp: initializeAppTC}))(App)\r\n\r\n\r\n// TYPES\r\ntype MDTPType = {\r\n\tinitializeApp: () => void\r\n}\r\n\r\ntype MSTPType = {\r\n\tinitialized: boolean\r\n}\r\n\r\ntype AppPropsType = MDTPType & MSTPType\r\n\r\ntype PathParamsType = {}\r\n\r\ntype OwnPropsType = RouteComponentProps<PathParamsType> & AppPropsType\r\n","import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport profileReducer from './profileReducer';\r\nimport dialogsReducer from './dialogsReducer';\r\nimport usersReducer from './usersReducer';\r\nimport appReducer from './appReducer';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport authReducer from './authReducer';\r\n\r\nconst reducers = combineReducers({\r\n\tprofilePage: profileReducer,\r\n\tmessagesPage: dialogsReducer,\r\n\tusersPage: usersReducer,\r\n\tauth: authReducer,\r\n\tform: formReducer,\r\n\tapp: appReducer\r\n});\r\n\r\nconst store = createStore(reducers, composeWithDevTools(applyMiddleware(thunkMiddleware)));\r\n\r\nexport type AppRootStateType = ReturnType<typeof reducers>;\r\nexport default store;\r\n\r\n// dev debugger store\r\n// @ts-ignore\r\nwindow.store = store;","import * as serviceWorker from './serviceWorker';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App/App';\r\nimport store from './redux/redux-store';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <Provider store={ store }>\r\n        <App />\r\n      </Provider>\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById( 'root' )\r\n);\r\n\r\n\r\nserviceWorker.unregister();","export type MapDispatchToPropsPostsType = (\r\n\t\targs: {\r\n\t\t\ttype: string;\r\n\t\t\tnewText?: string;\r\n\t\t}) => void\r\n\r\n\r\nexport enum ResultCodeStatus {\r\n\t'success' = 0,\r\n\t'error' = 1\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__15aYq\",\"main\":\"App_main__1WBCe\",\"sidebar\":\"App_sidebar__1PTcA\",\"content\":\"App_content__22H2o\",\"contentMain\":\"App_contentMain__3nWpB\",\"footer\":\"App_footer__xx8AR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__27fNW\",\"title\":\"Header_title__3u1QD\",\"loginBlock\":\"Header_loginBlock__3sTh4\",\"loginLink\":\"Header_loginLink__3QBTQ\",\"logout\":\"Header_logout__1uzyq\"};","import React from 'react';\r\nimport styles from './Preloader.module.css';\r\nimport preloader from '../../../assets/images/loader.svg';\r\n\r\nconst Preloader = () => {\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <img src={preloader} className={styles.img} alt='loader'/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Preloader;","export const required = (value: string) => {\r\n\tif (value) return undefined\r\n\treturn 'Field is required'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength: number) => (value: string) => {\r\n\tif (value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n\treturn undefined\r\n}\r\n\r\n","import React from 'react';\r\nimport styles from './FormControls.module.css';\r\n\r\nexport const Textarea: React.FC = (props: any) => {\r\n  const hasError = props.meta.touched && props.meta.error\r\n  return (\r\n      <div className={styles.formControl + ' ' + (hasError ? styles.error : \"\")}>\r\n        <textarea {...props.input} className={styles.textarea}/>\r\n        {hasError && <span className={styles.errorMsg}>{props.meta.error}</span>}\r\n      </div>\r\n  )\r\n}\r\n\r\n\r\nexport const Input: React.FC = (props: any) => {\r\n  const hasError = props.meta.touched && props.meta.error\r\n  return (\r\n      <div className={styles.formControl + ' ' + (hasError ? styles.error : \"\")}>\r\n        <input {...props.input} className={styles.inputText}/>\r\n        {hasError && <span className={styles.errorMsg}>{props.meta.error}</span>}\r\n      </div>\r\n  )\r\n}\r\n\r\n\r\nexport const InputPsw: React.FC = (props: any) => {\r\n  const hasError = props.meta.touched && props.meta.error\r\n  return (\r\n      <div className={styles.formControl + ' ' + (hasError ? styles.error : \"\")}>\r\n        <input {...props.input} className={styles.inputText} type={'password'}/>\r\n        {hasError && <span className={styles.errorMsg}>{props.meta.error}</span>}\r\n      </div>\r\n  )\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"copyright\":\"Footer_copyright__3r6OX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"socialLink\":\"SocialLink_socialLink__3f0XY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Login_section__1eSDU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Preloader_wrapper__32AtM\",\"img\":\"Preloader_img__31grf\"};","import {v1} from 'uuid'\r\nimport {Dispatch} from 'redux';\r\nimport {profileAPI} from '../api/api';\r\nimport {PostType} from '../components/Profile/MyPosts/MyPosts';\r\nimport {ResultCodeStatus} from '../types/types';\r\n\r\nexport const ADD_POST = 'ADD_POST'\r\nexport const UPDATE_NEW_POST_TEXT = 'UPDATE_NEW_POST_TEXT'\r\nexport const SET_USER_PROFILE = 'SET_USER_PROFILE'\r\nexport const SET_STATUS = 'SET_STATUS'\r\nexport const SAVE_PHOTO = 'SAVE_PHOTO'\r\n\r\n\r\n\r\nlet userProfile: ProfileType = {\r\n\tuserId: 1,\r\n\tlookingForAJob: false,\r\n\tlookingForAJobDescription: '',\r\n\tfullName: '',\r\n\taboutMe: '',\r\n\tcontacts: {\r\n\t\tgithub: '',\r\n\t\tvk: '',\r\n\t\tfacebook: '',\r\n\t\tinstagram: '',\r\n\t\ttwitter: '',\r\n\t\twebsite: '',\r\n\t\tyoutube: '',\r\n\t\tmainLink: ''\r\n\t},\r\n\tphotos: {\r\n\t\tsmall: '',\r\n\t\tlarge: ''\r\n\t}\r\n}\r\n\r\nconst initialState = {\r\n\tposts: [\r\n\t\t{id: v1(), message: 'Hi World! How are you?', likesCounter: 75},\r\n\t\t{id: v1(), message: 'Today is a good day!', likesCounter: 57},\r\n\t],\r\n\tprofile: userProfile,\r\n\tstatus: ''\r\n}\r\n\r\nconst profileReducer = (state: ProfilePageType = initialState, action: ProfileReducersActionType) => {\r\n\r\n\tswitch (action.type) {\r\n\t\tcase ADD_POST:\r\n\t\t\tlet newPost = {id: v1(), message: action.newPostBody, likesCounter: 0};\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tposts: [newPost, ...state.posts]\r\n\t\t\t}\r\n\r\n\t\tcase SET_USER_PROFILE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tprofile: action.profile\r\n\t\t\t}\r\n\r\n\t\tcase SET_STATUS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: action.status\r\n\t\t\t}\r\n\r\n\t\tcase SAVE_PHOTO:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tprofile: {...state.profile, photos: action.photos}\r\n\t\t\t}\r\n\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\nexport const addPostAC = (newPostBody: string): AddPostACType => {\r\n\treturn ({type: ADD_POST, newPostBody})\r\n}\r\n\r\nexport const setUserProfile = (profile: ProfileType): SetUserProfileType => {\r\n\treturn ({type: SET_USER_PROFILE, profile})\r\n}\r\n\r\nexport const setStatus = (status: string): SetStatusType => {\r\n\treturn ({type: SET_STATUS, status})\r\n}\r\n\r\nexport const savePhotoAC = (photos: PhotosType): SavePhotoType => {\r\n\treturn ({type: SAVE_PHOTO, photos})\r\n}\r\n\r\n\r\n// thunk\r\nexport const setUserProfileTC = (userId: string) => {\r\n\treturn (\r\n\t\t\t(dispatch: Dispatch) => {\r\n\t\t\t\tprofileAPI.getUser(userId).then(response => {\r\n\t\t\t\t\tdispatch(setUserProfile(response.data))\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t)\r\n}\r\n\r\nexport const getUserStatusTC = (userId: string) => {\r\n\treturn (\r\n\t\t\t(dispatch: Dispatch) => {\r\n\t\t\t\tprofileAPI.getStatus(userId).then(response => {\r\n\t\t\t\t\tdispatch(setStatus(response.data))\r\n\t\t\t\t\tconsole.log('getStatus:' + response.data)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t)\r\n}\r\n\r\nexport const updateStatusTC = (status: string) => {\r\n\treturn (\r\n\t\t\t(dispatch: Dispatch) => {\r\n\t\t\t\tprofileAPI.updateStatus(status).then(response => {\r\n\t\t\t\t\tif (response.data.resultCode === ResultCodeStatus.success) {\r\n\t\t\t\t\t\tdispatch(setStatus(status))\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t)\r\n}\r\n\r\nexport const savePhotoTC = (file: string) => {\r\n\treturn (\r\n\t\t\t(dispatch: Dispatch) => {\r\n\t\t\t\tprofileAPI.savePhoto(file).then(response => {\r\n\t\t\t\t\tif (response.data.resultCode === ResultCodeStatus.success) {\r\n\t\t\t\t\t\tdispatch(savePhotoAC(response.data.photos))\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t)\r\n}\r\n\r\n\r\nexport default profileReducer;\r\n\r\n\r\n\r\n// TYPES\r\n\r\nexport type AddPostACType = {\r\n\ttype: typeof ADD_POST\r\n\tnewPostBody: string\r\n}\r\n\r\nexport type SetUserProfileType = {\r\n\ttype: typeof SET_USER_PROFILE\r\n\tprofile: ProfileType\r\n}\r\n\r\nexport type SetStatusType = {\r\n\ttype: typeof SET_STATUS\r\n\tstatus: string\r\n}\r\n\r\nexport type SavePhotoType = {\r\n\ttype: typeof SAVE_PHOTO\r\n\tphotos: PhotosType\r\n}\r\n\r\nexport type ProfileReducersActionType = AddPostACType | SetUserProfileType | SetStatusType | SavePhotoType\r\n\r\nexport type ProfileType = {\r\n\tuserId: number\r\n\taboutMe: string\r\n\tlookingForAJob: boolean\r\n\tlookingForAJobDescription: null | string\r\n\tfullName: string\r\n\tcontacts: ProfileContactsType\r\n\tphotos: PhotosType\r\n}\r\n\r\ntype PhotosType = {\r\n\tsmall: null | string\r\n\tlarge: null | string\r\n}\r\n\r\nexport type ProfileContactsType = {\r\n\tgithub: null | string\r\n\tvk: null | string\r\n\tfacebook: null | string\r\n\tinstagram: null | string\r\n\ttwitter: null | string\r\n\twebsite: null | string\r\n\tyoutube: null | string\r\n\tmainLink: null | string\r\n}\r\n\r\nexport type ProfilePageType = {\r\n\tposts: Array<PostType>\r\n\tprofile: ProfileType\r\n\tstatus: string\r\n}"],"sourceRoot":""}